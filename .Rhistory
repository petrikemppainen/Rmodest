for(i in 3:5){
plotHist(modest9_locprior, modest9_locprior$KDAGplot, i, sort.by=new.order)
title(main=paste("K=", i, sep=""))
}
par(mfcol=c(5,2))
modest9_locprior$KDAG <- Qdist2KDAG(modest9_locprior$Qdist, modest9_locprior$K, merge.by="Qdist", threshold=0.05)
#par(mfcol=c(1,1))
modest9_locprior$KDAGplot <- plotKDAG(modest9_locprior, modest9_locprior$Qdist, modest9_locprior$KDAG)
# Now plot histograms
#par(mfcol=c(5,2))
# first plot histogram at K=2. Order infividuals by first Qcolumn and save this order for histograms att K=2-5 as well.
new.order <- plotHist(modest9_locprior, modest9_locprior$KDAGplot, 2, sort.by=1)
title(main=paste("K=", 2, sep=""))
# Because there is multimodality the histogram looks like art!! :)
# now plot the rest (keeping the order the same as above, by defining "sort.by")
for(i in 3:5){
plotHist(modest9_locprior, modest9_locprior$KDAGplot, i, sort.by=new.order)
title(main=paste("K=", i, sep=""))
}
# now go back to "Qdist2KDAG" and change the threshold to something lower to see what happens
modest9_locprior$KDAG <- Qdist2KDAG(modest9_locprior$Qdist, modest9_locprior$K, merge.by="Qdist", threshold=0.005)
#par(mfcol=c(1,1))
modest9_locprior$KDAGplot <- plotKDAG(modest9_locprior, modest9_locprior$Qdist, modest9_locprior$KDAG)
# Now plot histograms
#par(mfcol=c(5,2))
# first plot histogram at K=2. Order infividuals by first Qcolumn and save this order for histograms att K=2-5 as well.
new.order <- plotHist(modest9_locprior, modest9_locprior$KDAGplot, 2, sort.by=1)
title(main=paste("K=", 2, sep=""))
# Because there is multimodality the histogram looks like art!! :)
# now plot the rest (keeping the order the same as above, by defining "sort.by")
for(i in 3:5){
plotHist(modest9_locprior, modest9_locprior$KDAGplot, i, sort.by=new.order)
title(main=paste("K=", i, sep=""))
}
# now go back to "Qdist2KDAG" and change the threshold to something lower to see what happens
library("parallel", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
devtools::install_github("petrikemppainen/Rmodest")
install.packages('devtools')
devtools::install_github("petrikemppainen/Rmodest")
library("parallel", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library(Rmodest)
devtools::install_github("petrikemppainen/Rmodest")
devtools::install_github("petrikemppainen/LDna")
library(Rmodest)
install.packages("testthat")
check()
test()
library(devtools)
test()
test()
library(testthat)
test_check("<Rmodest>")
library(Rmodest)
library(Rmodest)
test_check("<Rmodest>")
test()
check()
install.packages("roxygen2")
check()
library("roxygen2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages("knitr")
check()
check()
check()
test_check("<Rmodest>")
test_check("Rmodest")
test_check("Rmodest")
K <- modest9_locprior$K
G_K <- Qdist[K==i, K==i]
Qdist <- modest9_locprior$Qdist
K <- modest9_locprior$K
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
hist(G_K)
d <- dist(G_K), method = "euclidean") # distance matrix
fit <- hclust(d, method="single")
plot(fit) # display dendogram
d <- dist(G_K)
fit <- hclust(d, method="single")
plot(fit) # display dendogram
i
i <- 3
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
d <- dist(G_K)
fit <- hclust(d, method="single")
plot(fit) # display dendogram
i <- 4
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
# Ward Hierarchical Clustering
d <- dist(G_K)
fit <- hclust(d, method="single")
plot(fit) # display dendogram
fit <- hclust(d, method="ward.D")
plot(fit) # display dendogram
groups <- cutree(fit, k=7) # cut tree into 5 clusters
range(G_K)
d
range(d)
library("LDna", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
LDnaRaw
d <- as.dist(G_K)
fit <- hclust(d, method="ward.D")
plot(fit) # display dendogram
i <- 5
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
LDnaRaw
d <- as.dist(G_K)
fit <- hclust(d, method="ward.D")
plot(fit) # display dendogram
groups <- cutree(fit, k=7) # cut tree into 5 clusters
groups
rect.hclust(fit, k=7, border="red")
d <- as.dist(G_K)
fit <- hclust(d, method="single")
plot(fit) # display dendogram
groups <- cutree(fit, k=7) # cut tree into 5 clusters
rect.hclust(fit, k=7, border="red")
?hclust
library(mclust)
fit <- Mclust(mydata)
fit <- Mclust(G_K)
plot(fit) # plot results
mydata <- G_K
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
i <- 2
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
mydata <- G_K
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
d <- as.dist(G_K)
fit <- hclust(d, method="single")
plot(fit) # display dendogram
i <- 3
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
# Ward Hierarchical Clustering
d <- as.dist(G_K)
fit <- hclust(d, method="single")
plot(fit) # display dendogram
i <- 4
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
# Ward Hierarchical Clustering
d <- as.dist(G_K)
fit <- hclust(d, method="single")
plot(fit) # display dendogram
i <- 5
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
# Ward Hierarchical Clustering
d <- as.dist(G_K)
fit <- hclust(d, method="single")
plot(fit) # display dendogram
par(mfcol=c(2,4))
for(i in 2:5){
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
# Ward Hierarchical Clustering
d <- as.dist(G_K)
fit <- hclust(d, method="single")
plot(fit) # display dendogram
}
par(mfcol=c(4,2))
for(i in 2:5){
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
# Ward Hierarchical Clustering
d <- as.dist(G_K)
fit <- hclust(d, method="single")
plot(fit) # display dendogram
}
is(fit)
?plot.hclust
par(mfcol=c(4,2))
for(i in 2:5){
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
# Ward Hierarchical Clustering
d <- as.dist(G_K)
fit <- hclust(d, method="single")
plot(fit, labels=NULL) # display dendogram
}
?plot.hclust
par(mfcol=c(4,2))
for(i in 2:5){
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
# Ward Hierarchical Clustering
d <- as.dist(G_K)
fit <- hclust(d, method="single")
plot(fit, labels=FALSE) # display dendogram
}
par(mfcol=c(4,2))
for(i in 2:5){
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
# Ward Hierarchical Clustering
d <- as.dist(G_K)
fit <- hclust(d, method="ward.D")
plot(fit, labels=FALSE) # display dendogram
}
d <- dist(G_K, method="eucl")
fit <- hclust(d, method="single")
plot(fit, labels=FALSE) # display dendogram
par(mfcol=c(4,2))
for(i in 2:5){
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
# Ward Hierarchical Clustering
d <- as.dist(G_K)
fit <- hclust(d, method="total")
plot(fit, labels=FALSE) # display dendogram
}
?hclust
for(i in 2:5){
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
# Ward Hierarchical Clustering
d <- as.dist(G_K)
fit <- hclust(d, method="complete")
plot(fit, labels=FALSE) # display dendogram
}
?hclust
for(i in 2:5){
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
# Ward Hierarchical Clustering
d <- as.dist(G_K)
fit <- hclust(d, method="ward.D2")
plot(fit, labels=FALSE) # display dendogram
}
for(i in 2:5){
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
# Ward Hierarchical Clustering
d <- as.dist(G_K)
fit <- hclust(d, method="ward.D")
plot(fit, labels=FALSE) # display dendogram
}
d <- dist(G_K)
fit <- hclust(d, method="ward.D")
plot(fit, labels=FALSE) # display dendogram
par(mfcol=c(4,2))
for(i in 2:5){
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
# Ward Hierarchical Clustering
d <- dist(G_K)
fit <- hclust(d, method="ward.D")
plot(fit, labels=FALSE) # display dendogram
}
for(i in 2:5){
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
# Ward Hierarchical Clustering
d <- as.dist(G_K)
fit <- hclust(d, method="ward.D")
plot(fit, labels=FALSE) # display dendogram
}
for(i in 2:5){
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
# Ward Hierarchical Clustering
d <- as.dist(G_K)
fit <- hclust(d, method="ward.D")
plot(fit, labels=FALSE) # display dendogram
}
for(i in 2:5){
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
# Ward Hierarchical Clustering
d <- as.dist(G_K)
fit <- hclust(d, method="single")
plot(fit, labels=FALSE) # display dendogram
}
for(i in 2:5){
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
# Ward Hierarchical Clustering
d <- as.dist(G_K)
fit <- hclust(d, method="single")
plot(fit, labels=FALSE) # display dendogram
abline(h=0.05, col="red")
}
for(i in 2:5){
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
# Ward Hierarchical Clustering
d <- as.dist(G_K)
fit <- hclust(d, method="single")
plot(fit, labels=FALSE) # display dendogram
abline(h=0.05, col="red")
abline(h=0.01, col="blue")
}
par(mfcol=c(2,2))
for(i in 2:5){
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
# Ward Hierarchical Clustering
d <- as.dist(G_K)
fit <- hclust(d, method="single")
plot(fit, labels=FALSE) # display dendogram
abline(h=0.05, col="red")
abline(h=0.01, col="blue")
}
for(i in 2:5){
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
# Ward Hierarchical Clustering
d <- as.dist(G_K)
fit <- hclust(d, method="ward.D")
plot(fit, labels=FALSE) # display dendogram
abline(h=0.05, col="red")
abline(h=0.01, col="blue")
}
fit
plot(d)
plot(G_K)
modest9_locprior$KDAG <- Qdist2KDAG(modest9_locprior$Qdist, modest9_locprior$K, merge.by="Qdist", threshold=0.01)
library("Rmodest", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
modest9_locprior$KDAG <- Qdist2KDAG(modest9_locprior$Qdist, modest9_locprior$K, merge.by="Qdist", threshold=0.01)
par(mfcol=c(1,1))
modest9_locprior$KDAGplot <- plotKDAG(modest9_locprior, modest9_locprior$Qdist, modest9_locprior$KDAG, plot.PCA=c(1,2), use.rgb=TRUE) #PCA plots first and second axes, try changing this to e.g. c(2,3)
par(mfcol=c(2,2))
out <- plotHist(modest9_locprior, modest9_locprior$KDAGplot, 2)
title(main=paste("K=", 2, sep=""))
for(i in 3:5){
plotHist(modest9_locprior, modest9_locprior$KDAGplot, i, sort.by=out$order)
title(main=paste("K=", i, sep=""))
}
d <- dist(G_K, method="eucledian")
?dist
d <- dist(G_K, method="euclidean")
plot(d)
?dist
d <- scale(d)
fit <- hclust(d, method="ward.D")
d
fit <- hclust(d, method="ward.D")
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
G_K <- scale(G_K)
d <- dist(G_K, method="euclidean")
fit <- hclust(d, method="ward.D")
plot(fit, labels=FALSE) # display dendogram
par(mfcol=c(2,2))
for(i in 2:5){
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
G_K <- scale(G_K)
# Ward Hierarchical Clustering
d <- dist(G_K, method="euclidean")
fit <- hclust(d, method="ward.D")
plot(fit, labels=FALSE) # display dendogram
abline(h=0.05, col="red")
abline(h=0.01, col="blue")
}
for(i in 2:5){
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
G_K <- scale(G_K)
# Ward Hierarchical Clustering
d <- dist(G_K, method="euclidean")
fit <- hclust(d, method="single")
plot(fit, labels=FALSE) # display dendogram
abline(h=0.05, col="red")
abline(h=0.01, col="blue")
}
for(i in 2:5){
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
# G_K <- scale(G_K)
# Ward Hierarchical Clustering
d <- dist(G_K, method="euclidean")
fit <- hclust(d, method="single")
plot(fit, labels=FALSE) # display dendogram
abline(h=0.05, col="red")
abline(h=0.01, col="blue")
}
plot(d)
plot(G_K)
for(i in 2:5){
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
# G_K <- scale(G_K)
# Ward Hierarchical Clustering
d <- dist(G_K)
fit <- hclust(d, method="single")
plot(fit, labels=FALSE) # display dendogram
abline(h=0.05, col="red")
abline(h=0.01, col="blue")
}
par(mfcol=c(2,2))
for(i in 2:5){
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
# G_K <- scale(G_K)
# Ward Hierarchical Clustering
d <- dist(G_K)
fit <- hclust(d, method="single")
plot(fit, labels=FALSE) # display dendogram
abline(h=0.05, col="red")
abline(h=0.01, col="blue")
}
for(i in 2:5){
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
# G_K <- scale(G_K)
# Ward Hierarchical Clustering
d <- as.dist(G_K)
fit <- hclust(d, method="single")
plot(fit, labels=FALSE) # display dendogram
abline(h=0.05, col="red")
abline(h=0.01, col="blue")
}
for(i in 2:5){
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
# G_K <- scale(G_K)
# Ward Hierarchical Clustering
d <- as.dist(G_K)
fit <- hclust(d, method="ward.D")
plot(fit, labels=FALSE) # display dendogram
abline(h=0.05, col="red")
abline(h=0.01, col="blue")
}
for(i in 2:5){
G_K <- Qdist[K==i, K==i]
G_K[lower.tri(G_K)] <- t(G_K)[lower.tri(G_K)]
diag(G_K) <- 0
# G_K <- scale(G_K)
# Ward Hierarchical Clustering
d <- as.dist(G_K)
fit <- hclust(d, method="single")
plot(fit, labels=FALSE) # display dendogram
abline(h=0.05, col="red")
abline(h=0.01, col="blue")
}
modest9_locprior$KDAG <- Qdist2KDAG(modest9_locprior$Qdist, modest9_locprior$K, merge.by="Qdist", threshold=0.02)
par(mfcol=c(1,1))
modest9_locprior$KDAGplot <- plotKDAG(modest9_locprior, modest9_locprior$Qdist, modest9_locprior$KDAG, plot.PCA=c(1,2), use.rgb=TRUE) #PCA plots first and second axes, try changing this to e.g. c(2,3)
par(mfcol=c(2,2))
out <- plotHist(modest9_locprior, modest9_locprior$KDAGplot, 2)
title(main=paste("K=", 2, sep=""))
for(i in 3:5){
plotHist(modest9_locprior, modest9_locprior$KDAGplot, i, sort.by=out$order)
title(main=paste("K=", i, sep=""))
}
modest9_locprior$KDAG <- Qdist2KDAG(modest9_locprior$Qdist, modest9_locprior$K, merge.by="Qdist", threshold=0.01)
par(mfcol=c(1,1))
modest9_locprior$KDAGplot <- plotKDAG(modest9_locprior, modest9_locprior$Qdist, modest9_locprior$KDAG, plot.PCA=c(1,2), use.rgb=TRUE) #PCA plots first and second axes, try changing this to e.g. c(2,3)
par(mfcol=c(2,2))
out <- plotHist(modest9_locprior, modest9_locprior$KDAGplot, 2)
title(main=paste("K=", 2, sep=""))
for(i in 3:5){
plotHist(modest9_locprior, modest9_locprior$KDAGplot, i, sort.by=out$order)
title(main=paste("K=", i, sep=""))
}
modest9_locprior$KDAG <- Qdist2KDAG(modest9_locprior$Qdist, modest9_locprior$K, merge.by="Qdist", threshold=0.005)
par(mfcol=c(1,1))
modest9_locprior$KDAGplot <- plotKDAG(modest9_locprior, modest9_locprior$Qdist, modest9_locprior$KDAG, plot.PCA=c(1,2), use.rgb=TRUE) #PCA plots first and second axes, try changing this to e.g. c(2,3)
par(mfcol=c(2,2))
out <- plotHist(modest9_locprior, modest9_locprior$KDAGplot, 2)
title(main=paste("K=", 2, sep=""))
for(i in 3:5){
plotHist(modest9_locprior, modest9_locprior$KDAGplot, i, sort.by=out$order)
title(main=paste("K=", i, sep=""))
}
